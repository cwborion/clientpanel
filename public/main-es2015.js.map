{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-client/add-client.component.ts","./src/app/components/add-client/add-client.component.html","./src/app/components/client-details/client-details.component.ts","./src/app/components/client-details/client-details.component.html","./src/app/components/clients/clients.component.ts","./src/app/components/clients/clients.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/edit-client/edit-client.component.ts","./src/app/components/edit-client/edit-client.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/settings/settings.component.ts","./src/app/components/settings/settings.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/guards/auth.guard.ts","./src/app/guards/register.guard.ts","./src/app/services/auth.service.ts","./src/app/services/client.service.ts","./src/app/services/settings.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [RegisterGuard],\n  },\n  {\n    path: 'client/add',\n    component: AddClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/edit/:id',\n    component: EditClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/:id',\n    component: ClientDetailsComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  providers: [AuthGuard, RegisterGuard],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientpanel';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ClientService } from '../../services/client.service';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '../../services/settings.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css'],\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0,\n  };\n\n  disableBalanceOnAdd: boolean;\n  @ViewChild('clientForm') form: any;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private router: Router,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n  onSubmit({ value, valid }: { value: Client; valid: boolean }) {\n    if (this.disableBalanceOnAdd) {\n      value.balance = 0;\n    }\n\n    if (!valid) {\n      // Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      // Add new client\n      this.clientService.newClient(value);\n      // Show message\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      // Redirect to dash\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-66\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard</a\n    >\n  </div>\n  <div class=\"col-md-66\"></div>\n</div>\n<div class=\"card\">\n  <div class=\"card-header\">\n    Add Client\n  </div>\n  <div class=\"card-body\">\n    <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"firstName\"\n          #clientFirstName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientFirstName.errors && clientFirstName.touched\n          }\"\n          [(ngModel)]=\"client.firstName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          First name required\n        </div>\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"lastName\"\n          #clientLastName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientLastName.errors && clientLastName.touched\n          }\"\n          [(ngModel)]=\"client.lastName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientLastName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          Last name required\n        </div>\n\n        <div\n          [hidden]=\"!clientLastName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"email\"\n          #clientEmail=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientEmail.errors && clientEmail.touched\n          }\"\n          [(ngModel)]=\"client.email\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n          required\n        />\n\n        <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n          Email required\n        </div>\n\n        <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n          Email is not valid\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"phone\"\n          #clientPhone=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientPhone.errors && clientPhone.touched\n          }\"\n          [(ngModel)]=\"client.phone\"\n          minlength=\"10\"\n          required\n        />\n\n        <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n          Phone is required\n        </div>\n\n        <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n          Must be at least 10 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"balance\">Balance</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          [(ngModel)]=\"client.balance\"\n          name=\"balance\"\n          #clientBalance=\"ngModel\"\n          [disabled]=\"disableBalanceOnAdd\"\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css'],\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n  hasBalance: boolean = false;\n  showBalanceUpdateInput: boolean = false;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe((client) => {\n      if (client != null) {\n        if (client.balance > 0) {\n          this.hasBalance = true;\n        }\n      }\n\n      this.client = client;\n    });\n  }\n\n  updateBalance() {\n    this.clientService.updateClient(this.client);\n    this.flashMessage.show('Balance updated', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n\n  onDeleteClick() {\n    if (confirm('Are you sure?')) {\n      this.clientService.deleteClient(this.client);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"btn-group pull-right\">\n      <a routerLink=\"/client/edit/{{ id }}\" class=\"btn btn-dark\">\n        Edit\n      </a>\n      <button (click)=\"onDeleteClick()\" class=\"btn btn-danger\">Delete</button>\n    </div>\n  </div>\n</div>\n<hr />\n<div *ngIf=\"client\" class=\"card\">\n  <h3 class=\"card-header\">{{ client.firstName }} {{ client.lastName }}</h3>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"cold-md-8 col-sm-6\">\n        <h4>Client ID: {{ client.id }}</h4>\n      </div>\n      <div class=\"cold-md-8 col-sm-6\">\n        <h3 class=\"pull-right\">\n          Balance\n          <span\n            [class.text-danger]=\"hasBalance\"\n            [class.text-success]=\"!hasBalance\"\n          >\n            {{ client.balance | currency: \"USD\":\"symbol\" }}\n          </span>\n          <small>\n            <a (click)=\"showBalanceUpdateInput = !showBalanceUpdateInput\">\n              <i class=\"fa fa-pencil\"></i>\n            </a>\n          </small>\n        </h3>\n        <div class=\"clearfix\">\n          <form *ngIf=\"showBalanceUpdateInput\" (submit)=\"updateBalance()\">\n            <div class=\"input-group\">\n              <input\n                type=\"text\"\n                name=\"balance\"\n                class=\"form-control\"\n                [(ngModel)]=\"client.balance\"\n              />\n              <span class=\"input-group-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Contact Email: {{ client.email }}</li>\n      <li class=\"list-group-item\">Contact Email: {{ client.phone }}</li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css'],\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) {}\n\n  ngOnInit() {\n    this.clientService.getClients().subscribe((clients) => {\n      this.clients = clients;\n      this.getTotalOwed();\n    });\n  }\n\n  getTotalOwed() {\n    this.totalOwed = this.clients.reduce((total, client) => {\n      return total + parseFloat(client.balance.toString());\n    }, 0);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <h2><i class=\"fa fa-users\"></i> Clients</h2>\n  </div>\n  <div class=\"col-md-6\">\n    <h5 class=\"text-right text-secondary\">\n      Total Owed: {{ totalOwed | currency: \"USD\":\"symbol\" }}\n    </h5>\n  </div>\n</div>\n<table *ngIf=\"clients?.length > 0; else noClients\" class=\"table table-striped\">\n  <thead class=\"thead-inverse\">\n    <tr>\n      <th>Name</th>\n      <th>Email</th>\n      <th>Balance</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let client of clients\">\n      <td>{{ client.firstName }} {{ client.lastName }}</td>\n      <td>{{ client.email }}</td>\n      <td>{{ client.balance | currency: \"USD\":\"symbol\" }}</td>\n      <td>\n        <a routerLink=\"client/{{ client.id }}\" class=\"btn btn-secondary btn-sm\">\n          <i class=\"fa fa-arrow-circle-o-right\"></i> Details\n        </a>\n      </td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-template #noClients>\n  <hr />\n  <h5>There are no clients in the system</h5>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-10\">\n    <app-clients></app-clients>\n  </div>\n  <div class=\"col-md-2\">\n    <app-sidebar></app-sidebar>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css'],\n})\nexport class EditClientComponent implements OnInit {\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0,\n  };\n  disableBalanceOnEdit: boolean;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService\n      .getClient(this.id)\n      .subscribe((client) => (this.client = client));\n  }\n\n  onSubmit({ value, valid }: { value: Client; valid: boolean }) {\n    if (!valid) {\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      // Add id to client\n      value.id = this.id;\n      // Update client\n      this.clientService.updateClient(value);\n      this.flashMessage.show('Client updated', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      this.router.navigate(['/client/' + this.id]);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-66\">\n    <a routerLink=\"/client/{{ id }}\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Client</a\n    >\n  </div>\n  <div class=\"col-md-66\"></div>\n</div>\n<div class=\"card\">\n  <div class=\"card-header\">\n    Edit Client\n  </div>\n  <div class=\"card-body\">\n    <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"firstName\"\n          #clientFirstName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientFirstName.errors && clientFirstName.touched\n          }\"\n          [(ngModel)]=\"client.firstName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          First name required\n        </div>\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"lastName\"\n          #clientLastName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientLastName.errors && clientLastName.touched\n          }\"\n          [(ngModel)]=\"client.lastName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientLastName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          Last name required\n        </div>\n\n        <div\n          [hidden]=\"!clientLastName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"email\"\n          #clientEmail=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientEmail.errors && clientEmail.touched\n          }\"\n          [(ngModel)]=\"client.email\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n          required\n        />\n\n        <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n          Email required\n        </div>\n\n        <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n          Email is not valid\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"phone\"\n          #clientPhone=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientPhone.errors && clientPhone.touched\n          }\"\n          [(ngModel)]=\"client.phone\"\n          minlength=\"10\"\n          required\n        />\n\n        <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n          Phone is required\n        </div>\n\n        <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n          Must be at least 10 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"balance\">Balance</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          [(ngModel)]=\"client.balance\"\n          name=\"balance\"\n          #clientBalance=\"ngModel\"\n          [disabled]=\"disableBalanceOnEdit\"\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe((auth) => {\n      if (auth) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.email, this.password)\n      .then((res) => {\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        this.router.navigate(['/']);\n      })\n      .catch((err) => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"\n            ><i class=\"fa fa-lock\"></i> Client Panel</span\n          >\n          Login\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            class=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe((auth) => {\n      if (auth) {\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are now logged out', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\"\n      ><span class=\"client-panel\">ClientPanel</span></a\n    >\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarMain\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav ml-auto\">\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n        </li>\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/settings\" class=\"nav-link\">Settings</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.authService\n      .register(this.email, this.password)\n      .then((res) => {\n        this.flashMessage.show('You are now registered and logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        this.router.navigate(['/']);\n      })\n      .catch((err) => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"\n            ><i class=\"fa fa-lock\"></i> Client Panel</span\n          >\n          Register\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            class=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from '../../models/Settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n})\nexport class SettingsComponent implements OnInit {\n  settings: Settings;\n\n  constructor(\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.settings = this.settingsService.getSettings();\n  }\n\n  onSubmit() {\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.show('Settings saved', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\"\n      ><i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard</a\n    >\n  </div>\n  <div class=\"col-md-6\"></div>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Edit Settings\n    </div>\n    <div class=\"card-body\">\n      <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label>Allow Registration</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"allowRegistration\"\n            [checked]=\"settings.allowRegistration\"\n            (change)=\"settings.allowRegistration = !settings.allowRegistration\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label>Disable Balance On Add</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"disableBalanceOnAdd\"\n            [checked]=\"settings.disableBalanceOnAdd\"\n            (change)=\"\n              settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\n            \"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label>Disable Balance On Edit</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"disableBalanceOnEdit\"\n            [checked]=\"settings.disableBalanceOnEdit\"\n            (change)=\"\n              settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\n            \"\n          />\n        </div>\n\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-success btn-block\">\n  <i class=\"fa fa-plus\"></i>New\n</a>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private afAuth: AngularFireAuth) {}\n\n  canActivate(): Observable<boolean> {\n    return this.afAuth.authState.pipe(\n      map((auth) => {\n        if (!auth) {\n          this.router.navigate(['/login']);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { SettingsService } from '../services/settings.service';\n\n@Injectable()\nexport class RegisterGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private settingsService: SettingsService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.settingsService.getSettings().allowRegistration) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) {}\n\n  login(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password).then(\n        (userData) => resolve(userData),\n        (err) => reject(err)\n      );\n    });\n  }\n\n  register(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password).then(\n        (userData) => resolve(userData),\n        (err) => reject(err)\n      );\n    });\n  }\n\n  getAuth() {\n    return this.afAuth.authState.pipe(map((auth) => auth));\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n  AngularFirestoreDocument,\n} from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients', (ref) =>\n      ref.orderBy('lastName', 'asc')\n    );\n  }\n\n  getClients(): Observable<Client[]> {\n    // Get clients with id\n    this.clients = this.clientsCollection.snapshotChanges().pipe(\n      map((changes) => {\n        return changes.map((action) => {\n          const data = action.payload.doc.data() as Client;\n          data.id = action.payload.doc.id;\n          return data;\n        });\n      })\n    );\n\n    return this.clients;\n  }\n\n  newClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client> {\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(\n      map((action) => {\n        if (action.payload.exists === false) {\n          return null;\n        } else {\n          const data = action.payload.data() as Client;\n          data.id = action.payload.id;\n          return data;\n        }\n      })\n    );\n\n    return this.client;\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Settings } from '../models/Settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceOnAdd: true,\n    disableBalanceOnEdit: true,\n  };\n\n  constructor() {\n    if (localStorage.getItem('settings') != null) {\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBbpFwkJChGyMcwGwQPjpa4ZPBicLUn9RE',\n    authDomain: 'clientpanelprod-cd2b0.firebaseapp.com',\n    databaseURL: 'https://clientpanelprod-cd2b0.firebaseio.com',\n    projectId: 'clientpanelprod-cd2b0',\n    storageBucket: 'clientpanelprod-cd2b0.appspot.com',\n    messagingSenderId: '566913337533',\n    appId: '1:566913337533:web:3cbf52d1e6fdb61dcc8fd4',\n    measurementId: 'G-1YKWQFDFZ3',\n  },\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}