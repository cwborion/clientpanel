{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-client/add-client.component.ts","webpack:///src/app/components/add-client/add-client.component.html","webpack:///src/app/components/client-details/client-details.component.ts","webpack:///src/app/components/client-details/client-details.component.html","webpack:///src/app/components/clients/clients.component.ts","webpack:///src/app/components/clients/clients.component.html","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/edit-client/edit-client.component.ts","webpack:///src/app/components/edit-client/edit-client.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/not-found/not-found.component.ts","webpack:///src/app/components/not-found/not-found.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/settings/settings.component.ts","webpack:///src/app/components/settings/settings.component.html","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/guards/register.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/client.service.ts","webpack:///src/app/services/settings.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","providers","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","bootstrap","AddClientComponent","flashMessage","clientService","router","settingsService","client","firstName","lastName","email","phone","balance","disableBalanceOnAdd","getSettings","value","valid","show","cssClass","timeout","newClient","navigate","onSubmit","ClientDetailsComponent","route","hasBalance","showBalanceUpdateInput","snapshot","params","getClient","subscribe","updateClient","confirm","deleteClient","onDeleteClick","ClientsComponent","getClients","clients","getTotalOwed","totalOwed","reduce","total","parseFloat","toString","DashboardComponent","EditClientComponent","disableBalanceOnEdit","LoginComponent","authService","getAuth","auth","login","password","res","err","message","NavbarComponent","isLoggedIn","loggedInUser","showRegister","allowRegistration","logout","NotFoundComponent","RegisterComponent","register","SettingsComponent","settings","changeSettings","SidebarComponent","AuthGuard","afAuth","authState","pipe","RegisterGuard","AuthService","reject","signInWithEmailAndPassword","userData","createUserWithEmailAndPassword","signOut","providedIn","ClientService","afs","clientsCollection","collection","ref","orderBy","snapshotChanges","changes","map","action","data","payload","doc","add","clientDoc","exists","update","SettingsService","localStorage","getItem","JSON","parse","setItem","stringify","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE,4FAAvB;AAA2CC,iBAAW,EAAE,CAAC,6DAAD;AAAxD,KADqB,EAErB;AAAEF,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAFqB,EAGrB;AACED,UAAI,EAAE,UADR;AAEEC,eAAS,EAAE,yFAFb;AAGEC,iBAAW,EAAE,CAAC,qEAAD;AAHf,KAHqB,EAQrB;AACEF,UAAI,EAAE,YADR;AAEEC,eAAS,EAAE,8FAFb;AAGEC,iBAAW,EAAE,CAAC,6DAAD;AAHf,KARqB,EAarB;AACEF,UAAI,EAAE,iBADR;AAEEC,eAAS,EAAE,iGAFb;AAGEC,iBAAW,EAAE,CAAC,6DAAD;AAHf,KAbqB,EAkBrB;AACEF,UAAI,EAAE,YADR;AAEEC,eAAS,EAAE,0GAFb;AAGEC,iBAAW,EAAE,CAAC,6DAAD;AAHf,KAlBqB,EAuBrB;AAAEF,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE,yFAA/B;AAAkDC,iBAAW,EAAE,CAAC,6DAAD;AAA/D,KAvBqB,EAwBrB;AAAEF,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAxBqB,CAAvB;;QAgCaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,iBAHhB,CAAC,6DAAD,EAAY,qEAAZ,C;AAA0B,gBAC5B,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAD4B,EAD3B,4DAC2B;;;;0HAG1BI,gB,EAAgB;AAAA;AAAA,kBAJjB,4DAIiB;AAAA,O;AAJL,K;;;;;sEAIXA,gB,EAAgB;cAL5B,sDAK4B;eALnB;AACRN,iBAAO,EAAE,CAAC,4DAAD,CADD;AAERQ,mBAAS,EAAE,CAAC,6DAAD,EAAY,qEAAZ,CAFH;AAGRC,iBAAO,EAAE,CAAC,6DAAaF,OAAb,CAAqBL,MAArB,CAAD;AAHD,S;AAKmB,Q;;;;;;;;;;;;;;;;;;AC/C7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaQ,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,aAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AACE;;AACA;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzmDaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,0DAFO,EAGP,4EAAoBR,OAApB,EAHO,EAIP,qEAJO,EAKP,+DAAkBS,aAAlB,CAAgC,sEAAYC,QAA5C,EAAsD,aAAtD,CALO,EAMP,6EANO,EAOP,uEAPO,CASI;;;;0HAGFF,S,EAAS;AAAA,uBAzBlB,2DAyBkB,EAxBlB,mFAwBkB,EAvBlB,6FAuBkB,EAtBlB,uFAsBkB,EArBlB,uFAqBkB,EApBlB,+FAoBkB,EAnBlB,kGAmBkB,EAlBlB,2GAkBkB,EAjBlB,iFAiBkB,EAhBlB,0FAgBkB,EAflB,0FAekB,EAdlB,4FAckB;AAdD,kBAGjB,uEAHiB,EAIjB,0DAJiB,EAIN,2EAJM,EAMjB,qEANiB,EAMD,8DANC,EAQjB,6EARiB,EASjB,uEATiB;AAcC,O;AALG,K;;;;;sEAKZA,S,EAAS;cA3BrB,sDA2BqB;eA3BZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,6FAHY,EAIZ,uFAJY,EAKZ,uFALY,EAMZ,+FANY,EAOZ,kGAPY,EAQZ,2GARY,EASZ,iFATY,EAUZ,0FAVY,EAWZ,0FAXY,EAYZ,4FAZY,CADN;AAeRT,iBAAO,EAAE,CACP,uEADO,EAEP,0DAFO,EAGP,4EAAoBF,OAApB,EAHO,EAIP,qEAJO,EAKP,+DAAkBS,aAAlB,CAAgC,sEAAYC,QAA5C,EAAsD,aAAtD,CALO,EAMP,6EANO,EAOP,uEAPO,CAfD;AAwBRT,mBAAS,EAAE,EAxBH;AAyBRW,mBAAS,EAAE,CAAC,2DAAD;AAzBH,S;AA2BY,Q;;;;;;;;;;;;;;;;;;ACnDtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;QAaaC,kB;AAYX,kCACUC,YADV,EAEUC,aAFV,EAGUC,MAHV,EAIUC,eAJV,EAI0C;AAAA;;AAHhC,aAAAH,YAAA,GAAAA,YAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAfV,aAAAC,MAAA,GAAiB;AACfC,mBAAS,EAAE,EADI;AAEfC,kBAAQ,EAAE,EAFK;AAGfC,eAAK,EAAE,EAHQ;AAIfC,eAAK,EAAE,EAJQ;AAKfC,iBAAO,EAAE;AALM,SAAjB;AAgBI;;;;mCAEO;AACT,eAAKC,mBAAL,GAA2B,KAAKP,eAAL,CAAqBQ,WAArB,GAAmCD,mBAA9D;AACD;;;uCAE6D;AAAA,cAAnDE,KAAmD,QAAnDA,KAAmD;AAAA,cAA5CC,KAA4C,QAA5CA,KAA4C;;AAC5D,cAAI,KAAKH,mBAAT,EAA8B;AAC5BE,iBAAK,CAACH,OAAN,GAAgB,CAAhB;AACD;;AAED,cAAI,CAACI,KAAL,EAAY;AACV;AACA,iBAAKb,YAAL,CAAkBc,IAAlB,CAAuB,oCAAvB,EAA6D;AAC3DC,sBAAQ,EAAE,cADiD;AAE3DC,qBAAO,EAAE;AAFkD,aAA7D;AAID,WAND,MAMO;AACL;AACA,iBAAKf,aAAL,CAAmBgB,SAAnB,CAA6BL,KAA7B,EAFK,CAGL;;AACA,iBAAKZ,YAAL,CAAkBc,IAAlB,CAAuB,kBAAvB,EAA2C;AACzCC,sBAAQ,EAAE,eAD+B;AAEzCC,qBAAO,EAAE;AAFgC,aAA3C,EAJK,CAQL;;AACA,iBAAKd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF;;;;;;;uBA7CUnB,kB,EAAkB,6I,EAAA,uI,EAAA,uH,EAAA,2I;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;ACb/B;;AACE;;AACE;;AACE;;AAA0C;;AAAiB;;AAE/D;;AACA;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA2B;AAAA;;AAAA;;AAAA,mBAAY,IAAAoB,QAAA,KAAZ;AAAgC,WAAhC;;AACzB;;AACE;;AAAuB;;AAAU;;AACjC;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AAIE;;AACF;;AAEA;;AAIE;;AACF;;AACF;;AAEA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AAIE;;AACF;;AAEA;;AAIE;;AACF;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAqB;;AAAO;;AAC5B;;AAGE;AAAA;AAAA;;AAHF;;AAQF;;AAEA;;AACF;;AACF;;AACF;;;;;;;;;;;;AApHU;;AAAA,iLAEE,SAFF,EAEE,oBAFF;;AASA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA,iLAEE,SAFF,EAEE,mBAFF;;AASA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA,iLAEE,SAFF,EAEE,gBAFF;;AAQG;;AAAA;;AAIA;;AAAA;;AAYH;;AAAA,iLAEE,SAFF,EAEE,gBAFF;;AAQG;;AAAA;;AAIA;;AAAA;;AAUH;;AAAA,kGAA4B,UAA5B,EAA4B,uBAA5B;;;;;;;;;sEDlHGpB,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTR,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;gBAU5B,uD;iBAAU,Y;;;;;;;;;;;;;;;;;;;;AEvBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuCU;;AAAqC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AACE;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAJF;;AAMA;;AACE;;AAA8C;;AAAM;;AACtD;;AACF;;AACF;;;;;;AANM;;AAAA;;;;;;;;AA7BhB;;AACE;;AAAwB;;AAA4C;;AACpE;;AACE;;AACE;;AACE;;AAAI;;AAA0B;;AAChC;;AACA;;AACE;;AACE;;AACA;;AAIE;;;;AACF;;AACA;;AACE;;AAAG;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AACF;;AACF;;AACF;;AACA;;AACE;;AAaF;;AACF;;AACF;;AACA;;AACA;;AACE;;AAA4B;;AAAiC;;AAC7D;;AAA4B;;AAAiC;;AAC/D;;AACF;;AACF;;;;;;AA5C0B;;AAAA;;AAId;;AAAA;;AAMA;;AAAA,oGAAgC,cAAhC,EAAgC,kBAAhC;;AAGA;;AAAA;;AASI;;AAAA;;AAkBkB;;AAAA;;AACA;;AAAA;;;;QD/CrB2B,sB;AAMX,sCACUnB,aADV,EAEUC,MAFV,EAGUmB,KAHV,EAIUrB,YAJV,EAI4C;AAAA;;AAHlC,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAmB,KAAA,GAAAA,KAAA;AACA,aAAArB,YAAA,GAAAA,YAAA;AAPV,aAAAsB,UAAA,GAAsB,KAAtB;AACA,aAAAC,sBAAA,GAAkC,KAAlC;AAOI;;;;mCAEO;AAAA;;AACT;AACA,eAAK3C,EAAL,GAAU,KAAKyC,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV,CAFS,CAGT;;AACA,eAAKxB,aAAL,CAAmByB,SAAnB,CAA6B,KAAK9C,EAAlC,EAAsC+C,SAAtC,CAAgD,UAACvB,MAAD,EAAY;AAC1D,gBAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,kBAAIA,MAAM,CAACK,OAAP,GAAiB,CAArB,EAAwB;AACtB,qBAAI,CAACa,UAAL,GAAkB,IAAlB;AACD;AACF;;AAED,iBAAI,CAAClB,MAAL,GAAcA,MAAd;AACD,WARD;AASD;;;wCAEe;AACd,eAAKH,aAAL,CAAmB2B,YAAnB,CAAgC,KAAKxB,MAArC;AACA,eAAKJ,YAAL,CAAkBc,IAAlB,CAAuB,iBAAvB,EAA0C;AACxCC,oBAAQ,EAAE,eAD8B;AAExCC,mBAAO,EAAE;AAF+B,WAA1C;AAID;;;wCAEe;AACd,cAAIa,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5B,iBAAK5B,aAAL,CAAmB6B,YAAnB,CAAgC,KAAK1B,MAArC;AACA,iBAAKJ,YAAL,CAAkBc,IAAlB,CAAuB,gBAAvB,EAAyC;AACvCC,sBAAQ,EAAE,eAD6B;AAEvCC,qBAAO,EAAE;AAF8B,aAAzC;AAIA,iBAAKd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF;;;;;;;uBA7CUE,sB,EAAsB,uI,EAAA,uH,EAAA,+H,EAAA,6I;AAAA,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,uqB;AAAA;AAAA;ACXnC;;AACE;;AACE;;AACE;;AAA0C;;AAC5C;;AACF;;AACA;;AACE;;AACE;;AACE;;AACF;;AACA;;AAAQ;AAAA,mBAAS,IAAAW,aAAA,EAAT;AAAwB,WAAxB;;AAAiD;;AAAM;;AACjE;;AACF;;AACF;;AACA;;AACA;;;;AARS;;AAAA;;AAQJ;;AAAA;;;;;;;;;;sEDLQX,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT7B,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBI;;AACE;;AAAI;;AAA4C;;AAChD;;AAAI;;AAAkB;;AACtB;;AAAI;;;;AAA+C;;AACnD;;AACE;;AACE;;AAA2C;;AAC7C;;AACF;;AACA;;AACF;;;;;;AATM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEC;;AAAA;;;;;;AAfX;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAO;;AACX;;AACF;;AACF;;AACA;;AACE;;AAWF;;AACF;;;;;;AAZQ;;AAAA;;;;;;AAeN;;AACA;;AAAI;;AAAkC;;;;QD1B3BuC,gB;AAIX,gCAAoB/B,aAApB,EAAkD;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AAAgC;;;;mCAEzC;AAAA;;AACT,eAAKA,aAAL,CAAmBgC,UAAnB,GAAgCN,SAAhC,CAA0C,UAACO,OAAD,EAAa;AACrD,kBAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,kBAAI,CAACC,YAAL;AACD,WAHD;AAID;;;uCAEc;AACb,eAAKC,SAAL,GAAiB,KAAKF,OAAL,CAAaG,MAAb,CAAoB,UAACC,KAAD,EAAQlC,MAAR,EAAmB;AACtD,mBAAOkC,KAAK,GAAGC,UAAU,CAACnC,MAAM,CAACK,OAAP,CAAe+B,QAAf,EAAD,CAAzB;AACD,WAFgB,EAEd,CAFc,CAAjB;AAGD;;;;;;;uBAjBUR,gB,EAAgB,uI;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA,e;AAAA,a;AAAA,+V;AAAA;AAAA;ACV7B;;AACE;;AACE;;AAAI;;AAA4B;;AAAO;;AACzC;;AACA;;AACE;;AACE;;;;AACF;;AACF;;AACF;;AACA;;AAwBA;;;;;;AA5BM;;AAAA;;AAIC;;AAAA,kIAA2C,UAA3C,EAA2C,GAA3C;;;;;;;;;;sEDAMA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTzC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;;;AEV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagD,kB;AAEX,oCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,oC;AAAA,c;AAAA,a;AAAA,6D;AAAA;AAAA;ACP/B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;;;;sEDAaA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTlD,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;AEP/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;QAYaiD,mB;AAWX,mCACUzC,aADV,EAEUC,MAFV,EAGUmB,KAHV,EAIUrB,YAJV,EAKUG,eALV,EAK0C;AAAA;;AAJhC,aAAAF,aAAA,GAAAA,aAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAmB,KAAA,GAAAA,KAAA;AACA,aAAArB,YAAA,GAAAA,YAAA;AACA,aAAAG,eAAA,GAAAA,eAAA;AAdV,aAAAC,MAAA,GAAiB;AACfC,mBAAS,EAAE,EADI;AAEfC,kBAAQ,EAAE,EAFK;AAGfC,eAAK,EAAE,EAHQ;AAIfC,eAAK,EAAE,EAJQ;AAKfC,iBAAO,EAAE;AALM,SAAjB;AAeI;;;;mCAEO;AAAA;;AACT,eAAKkC,oBAAL,GAA4B,KAAKxC,eAAL,CAAqBQ,WAArB,GAAmCgC,oBAA/D,CADS,CAET;;AACA,eAAK/D,EAAL,GAAU,KAAKyC,KAAL,CAAWG,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV,CAHS,CAIT;;AACA,eAAKxB,aAAL,CACGyB,SADH,CACa,KAAK9C,EADlB,EAEG+C,SAFH,CAEa,UAACvB,MAAD;AAAA,mBAAa,MAAI,CAACA,MAAL,GAAcA,MAA3B;AAAA,WAFb;AAGD;;;wCAE6D;AAAA,cAAnDQ,KAAmD,SAAnDA,KAAmD;AAAA,cAA5CC,KAA4C,SAA5CA,KAA4C;;AAC5D,cAAI,CAACA,KAAL,EAAY;AACV,iBAAKb,YAAL,CAAkBc,IAAlB,CAAuB,oCAAvB,EAA6D;AAC3DC,sBAAQ,EAAE,cADiD;AAE3DC,qBAAO,EAAE;AAFkD,aAA7D;AAID,WALD,MAKO;AACL;AACAJ,iBAAK,CAAChC,EAAN,GAAW,KAAKA,EAAhB,CAFK,CAGL;;AACA,iBAAKqB,aAAL,CAAmB2B,YAAnB,CAAgChB,KAAhC;AACA,iBAAKZ,YAAL,CAAkBc,IAAlB,CAAuB,gBAAvB,EAAyC;AACvCC,sBAAQ,EAAE,eAD6B;AAEvCC,qBAAO,EAAE;AAF8B,aAAzC;AAIA,iBAAKd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,aAAa,KAAKtC,EAAnB,CAArB;AACD;AACF;;;;;;;uBA9CU8D,mB,EAAmB,uI,EAAA,uH,EAAA,+H,EAAA,6I,EAAA,2I;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,c;AAAA,6vC;AAAA;AAAA;;;ACZhC;;AACE;;AACE;;AACE;;AAA0C;;AAAc;;AAE5D;;AACA;;AACF;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA2B;AAAA;;AAAA;;AAAA,mBAAY,IAAAvB,QAAA,KAAZ;AAAgC,WAAhC;;AACzB;;AACE;;AAAuB;;AAAU;;AACjC;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AAIE;;AACF;;AAEA;;AAIE;;AACF;;AACF;;AAEA;;AACE;;AAAsB;;AAAS;;AAC/B;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AAIE;;AACF;;AAEA;;AAIE;;AACF;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAmB;;AAAK;;AACxB;;AAQE;AAAA;AAAA;;AARF;;AAaA;;AACE;;AACF;;AAEA;;AACE;;AACF;;AACF;;AAEA;;AACE;;AAAqB;;AAAO;;AAC5B;;AAGE;AAAA;AAAA;;AAHF;;AAQF;;AAEA;;AACF;;AACF;;AACF;;;;;;;;;;;;AAvIO;;AAAA;;AAmBG;;AAAA,iLAEE,SAFF,EAEE,oBAFF;;AASA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA,iLAEE,SAFF,EAEE,mBAFF;;AASA;;AAAA;;AAOA;;AAAA;;AAcA;;AAAA,iLAEE,SAFF,EAEE,gBAFF;;AAQG;;AAAA;;AAIA;;AAAA;;AAYH;;AAAA,iLAEE,SAFF,EAEE,gBAFF;;AAQG;;AAAA;;AAIA;;AAAA;;AAUH;;AAAA,kGAA4B,UAA5B,EAA4B,wBAA5B;;;;;;;;;sEDnHGuB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTnD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamD,c;AAIX,8BACUC,WADV,EAEU3C,MAFV,EAGUF,YAHV,EAG4C;AAAA;;AAFlC,aAAA6C,WAAA,GAAAA,WAAA;AACA,aAAA3C,MAAA,GAAAA,MAAA;AACA,aAAAF,YAAA,GAAAA,YAAA;AACN;;;;mCAEO;AAAA;;AACT,eAAK6C,WAAL,CAAiBC,OAAjB,GAA2BnB,SAA3B,CAAqC,UAACoB,IAAD,EAAU;AAC7C,gBAAIA,IAAJ,EAAU;AACR,oBAAI,CAAC7C,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD;AACF,WAJD;AAKD;;;mCAEU;AAAA;;AACT,eAAK2B,WAAL,CACGG,KADH,CACS,KAAKzC,KADd,EACqB,KAAK0C,QAD1B,EAEG5E,IAFH,CAEQ,UAAC6E,GAAD,EAAS;AACb,kBAAI,CAAClD,YAAL,CAAkBc,IAAlB,CAAuB,uBAAvB,EAAgD;AAC9CC,sBAAQ,EAAE,eADoC;AAE9CC,qBAAO,EAAE;AAFqC,aAAhD;;AAIA,kBAAI,CAACd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WARH,WASS,UAACiC,GAAD,EAAS;AACd,kBAAI,CAACnD,YAAL,CAAkBc,IAAlB,CAAuBqC,GAAG,CAACC,OAA3B,EAAoC;AAClCrC,sBAAQ,EAAE,cADwB;AAElCC,qBAAO,EAAE;AAFyB,aAApC;AAID,WAdH;AAeD;;;;;;;uBAlCU4B,c,EAAc,mI,EAAA,uH,EAAA,6I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,2gB;AAAA;AAAA;ACV3B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACG;;AAA2B;;AAAY;;AAE1C;;AACF;;AACA;;AAAM;AAAA,mBAAU,IAAAzB,QAAA,EAAV;AAAoB,WAApB;;AACJ;;AACE;;AAAmB;;AAAK;;AACxB;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACA;;AAKF;;AACF;;AACF;;AACF;;AACF;;;;AAxBc;;AAAA;;AAUA;;AAAA;;;;;;;;;sEDhBDyB,c,EAAc;cAL1B,uDAK0B;eALhB;AACTrD,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBQ;;AACE;;AAA2C;;AAAQ;;AACrD;;;;;;AACA;;AACE;;AAAwC;;AAAK;;AAC/C;;;;;;AACA;;AACE;;AAA6B;;AAAkB;;AACjD;;;;;;AAD+B;;AAAA;;;;;;AAE/B;;AACE;;AAA2C;;AAAQ;;AACrD;;;;;;;;AACA;;AACE;;AAAY;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAAM;;AAC/D;;;;QDvBK4D,e;AAKX,+BACUR,WADV,EAEU3C,MAFV,EAGUF,YAHV,EAIUG,eAJV,EAI0C;AAAA;;AAHhC,aAAA0C,WAAA,GAAAA,WAAA;AACA,aAAA3C,MAAA,GAAAA,MAAA;AACA,aAAAF,YAAA,GAAAA,YAAA;AACA,aAAAG,eAAA,GAAAA,eAAA;AACN;;;;mCAEO;AAAA;;AACT,eAAK0C,WAAL,CAAiBC,OAAjB,GAA2BnB,SAA3B,CAAqC,UAACoB,IAAD,EAAU;AAC7C,gBAAIA,IAAJ,EAAU;AACR,oBAAI,CAACO,UAAL,GAAkB,IAAlB;AACA,oBAAI,CAACC,YAAL,GAAoBR,IAAI,CAACxC,KAAzB;AACD,aAHD,MAGO;AACL,oBAAI,CAAC+C,UAAL,GAAkB,KAAlB;AACD;AACF,WAPD;AAQA,eAAKE,YAAL,GAAoB,KAAKrD,eAAL,CAAqBQ,WAArB,GAAmC8C,iBAAvD;AACD;;;wCAEe;AACd,eAAKZ,WAAL,CAAiBa,MAAjB;AACA,eAAK1D,YAAL,CAAkBc,IAAlB,CAAuB,wBAAvB,EAAiD;AAC/CC,oBAAQ,EAAE,eADqC;AAE/CC,mBAAO,EAAE;AAFsC,WAAjD;AAIA,eAAKd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;uBA/BUmC,e,EAAe,mI,EAAA,uH,EAAA,6I,EAAA,2I;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,urB;AAAA;AAAA;ACZ5B;;AACE;;AACE;;AACG;;AAA2B;;AAAW;;AAAO;;AAEhD;;AAME;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAmC;;AAAS;;AAC9C;;AACF;;AAEA;;AACE;;AAGA;;AAGA;;AAGA;;AAGA;;AAGF;;AACF;;AACF;;AACF;;;;AAlBY;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;sEDrBCA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT9D,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakE,iB;AAEX,mCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA,c;AAAA,a;AAAA;AAAA;ACP9B;;AAAG;;AAAgB;;;;;;;;sEDONA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTpE,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUamE,iB;AAIX,iCACUf,WADV,EAEU3C,MAFV,EAGUF,YAHV,EAG4C;AAAA;;AAFlC,aAAA6C,WAAA,GAAAA,WAAA;AACA,aAAA3C,MAAA,GAAAA,MAAA;AACA,aAAAF,YAAA,GAAAA,YAAA;AACN;;;;mCAEO,CAAE;;;mCAEF;AAAA;;AACT,eAAK6C,WAAL,CACGgB,QADH,CACY,KAAKtD,KADjB,EACwB,KAAK0C,QAD7B,EAEG5E,IAFH,CAEQ,UAAC6E,GAAD,EAAS;AACb,kBAAI,CAAClD,YAAL,CAAkBc,IAAlB,CAAuB,sCAAvB,EAA+D;AAC7DC,sBAAQ,EAAE,eADmD;AAE7DC,qBAAO,EAAE;AAFoD,aAA/D;;AAIA,kBAAI,CAACd,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,GAAD,CAArB;AACD,WARH,WASS,UAACiC,GAAD,EAAS;AACd,kBAAI,CAACnD,YAAL,CAAkBc,IAAlB,CAAuBqC,GAAG,CAACC,OAA3B,EAAoC;AAClCrC,sBAAQ,EAAE,cADwB;AAElCC,qBAAO,EAAE;AAFyB,aAApC;AAID,WAdH;AAeD;;;;;;;uBA5BU4C,iB,EAAiB,mI,EAAA,uH,EAAA,6I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,8gB;AAAA;AAAA;ACV9B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACG;;AAA2B;;AAAY;;AAE1C;;AACF;;AACA;;AAAM;AAAA,mBAAU,IAAAzC,QAAA,EAAV;AAAoB,WAApB;;AACJ;;AACE;;AAAmB;;AAAK;;AACxB;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AAGE;AAAA;AAAA;;AAHF;;AAOF;;AACA;;AAKF;;AACF;;AACF;;AACF;;AACF;;;;AAxBc;;AAAA;;AAUA;;AAAA;;;;;;;;;sEDhBDyC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTrE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaqE,iB;AAGX,iCACU5D,MADV,EAEUF,YAFV,EAGUG,eAHV,EAG0C;AAAA;;AAFhC,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAF,YAAA,GAAAA,YAAA;AACA,aAAAG,eAAA,GAAAA,eAAA;AACN;;;;mCAEO;AACT,eAAK4D,QAAL,GAAgB,KAAK5D,eAAL,CAAqBQ,WAArB,EAAhB;AACD;;;mCAEU;AACT,eAAKR,eAAL,CAAqB6D,cAArB,CAAoC,KAAKD,QAAzC;AACA,eAAK/D,YAAL,CAAkBc,IAAlB,CAAuB,gBAAvB,EAAyC;AACvCC,oBAAQ,EAAE,eAD6B;AAEvCC,mBAAO,EAAE;AAF8B,WAAzC;AAID;;;;;;;uBAnBU8C,iB,EAAiB,uH,EAAA,6I,EAAA,2I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,mgB;AAAA;AAAA;ACX9B;;AACE;;AACE;;AACG;;AAA0C;;AAAiB;;AAEhE;;AACA;;AACA;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAM;AAAA,mBAAU,IAAA3C,QAAA,EAAV;AAAoB,WAApB;;AACJ;;AACE;;AAAO;;AAAkB;;AAAQ;;AAAM;;AAAS;;AAChD;;AAIE;AAAA;AAAA;;AAJF;;AAMF;;AAEA;;AACE;;AAAO;;AAAsB;;AAAQ;;AAAM;;AAAS;;AACpD;;AAIE;AAAA;AAAA;;AAJF;;AAQF;;AAEA;;AACE;;AAAO;;AAAuB;;AAAQ;;AAAM;;AAAS;;AACrD;;AAIE;AAAA;AAAA;;AAJF;;AAQF;;AAEA;;AACF;;AACF;;AACF;;AACF;;;;AArCiD;;AAAA;;AAIrC;;AAAA;;AAMyC;;AAAA;;AAIzC;;AAAA;;AAQ0C;;AAAA;;AAI1C;;AAAA;;;;;;;;;sED7BC2C,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTvE,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawE,gB;AAEX,kCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA,c;AAAA,a;AAAA,yG;AAAA;AAAA;ACP7B;;AACE;;AAA0B;;AAC5B;;;;;;;;;sEDKaA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACT1E,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;;;;;;;;;;;;;;;AEP7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAOayE,S;AACX,yBAAoBhE,MAApB,EAA4CiE,MAA5C,EAAqE;AAAA;;AAAjD,aAAAjE,MAAA,GAAAA,MAAA;AAAwB,aAAAiE,MAAA,GAAAA,MAAA;AAA2B;;;;sCAE5D;AAAA;;AACT,iBAAO,KAAKA,MAAL,CAAYC,SAAZ,CAAsBC,IAAtB,CACL,2DAAI,UAACtB,IAAD,EAAU;AACZ,gBAAI,CAACA,IAAL,EAAW;AACT,oBAAI,CAAC7C,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA,qBAAO,KAAP;AACD,aAHD,MAGO;AACL,qBAAO,IAAP;AACD;AACF,WAPD,CADK,CAAP;AAUD;;;;;;;uBAdUgD,S,EAAS,8G,EAAA,yH;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS;;;;;sEAATA,S,EAAS;cADrB;AACqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACPtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaI,a;AACX,6BACUpE,MADV,EAEUC,eAFV,EAE0C;AAAA;;AADhC,aAAAD,MAAA,GAAAA,MAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACN;;;;sCAEO;AACT,cAAI,KAAKA,eAAL,CAAqBQ,WAArB,GAAmC8C,iBAAvC,EAA0D;AACxD,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAKvD,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAbUoD,a,EAAa,8G,EAAA,kI;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACL1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAQaC,W;AACX,2BAAoBJ,MAApB,EAA6C;AAAA;;AAAzB,aAAAA,MAAA,GAAAA,MAAA;AAA2B;;;;8BAEzC5D,K,EAAe0C,Q,EAAkB;AAAA;;AACrC,iBAAO,IAAI9E,OAAJ,CAAY,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AACtC,kBAAI,CAACL,MAAL,CAAYpB,IAAZ,CAAiB0B,0BAAjB,CAA4ClE,KAA5C,EAAmD0C,QAAnD,EAA6D5E,IAA7D,CACE,UAACqG,QAAD;AAAA,qBAActG,OAAO,CAACsG,QAAD,CAArB;AAAA,aADF,EAEE,UAACvB,GAAD;AAAA,qBAASqB,MAAM,CAACrB,GAAD,CAAf;AAAA,aAFF;AAID,WALM,CAAP;AAMD;;;iCAEQ5C,K,EAAe0C,Q,EAAkB;AAAA;;AACxC,iBAAO,IAAI9E,OAAJ,CAAY,UAACC,OAAD,EAAUoG,MAAV,EAAqB;AACtC,mBAAI,CAACL,MAAL,CAAYpB,IAAZ,CAAiB4B,8BAAjB,CAAgDpE,KAAhD,EAAuD0C,QAAvD,EAAiE5E,IAAjE,CACE,UAACqG,QAAD;AAAA,qBAActG,OAAO,CAACsG,QAAD,CAArB;AAAA,aADF,EAEE,UAACvB,GAAD;AAAA,qBAASqB,MAAM,CAACrB,GAAD,CAAf;AAAA,aAFF;AAID,WALM,CAAP;AAMD;;;kCAES;AACR,iBAAO,KAAKgB,MAAL,CAAYC,SAAZ,CAAsBC,IAAtB,CAA2B,2DAAI,UAACtB,IAAD;AAAA,mBAAUA,IAAV;AAAA,WAAJ,CAA3B,CAAP;AACD;;;iCAEQ;AACP,eAAKoB,MAAL,CAAYpB,IAAZ,CAAiB6B,OAAjB;AACD;;;;;;;uBA3BUL,W,EAAW,yH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVM,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;QAcaC,a;AAMX,6BAAoBC,GAApB,EAA2C;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAClB,aAAKC,iBAAL,GAAyB,KAAKD,GAAL,CAASE,UAAT,CAAoB,SAApB,EAA+B,UAACC,GAAD;AAAA,iBACtDA,GAAG,CAACC,OAAJ,CAAY,UAAZ,EAAwB,KAAxB,CADsD;AAAA,SAA/B,CAAzB;AAGD;;;;qCAES;AACR;AACA,eAAKjD,OAAL,GAAe,KAAK8C,iBAAL,CAAuBI,eAAvB,GAAyCf,IAAzC,CACb,2DAAI,UAACgB,OAAD,EAAa;AACf,mBAAOA,OAAO,CAACC,GAAR,CAAY,UAACC,MAAD,EAAY;AAC7B,kBAAMC,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmBF,IAAnB,EAAb;AACAA,kBAAI,CAAC5G,EAAL,GAAU2G,MAAM,CAACE,OAAP,CAAeC,GAAf,CAAmB9G,EAA7B;AACA,qBAAO4G,IAAP;AACD,aAJM,CAAP;AAKD,WAND,CADa,CAAf;AAUA,iBAAO,KAAKtD,OAAZ;AACD;;;kCAES9B,M,EAAgB;AACxB,eAAK4E,iBAAL,CAAuBW,GAAvB,CAA2BvF,MAA3B;AACD;;;kCAESxB,E,EAAU;AAClB,eAAKgH,SAAL,GAAiB,KAAKb,GAAL,CAASW,GAAT,mBAAgC9G,EAAhC,EAAjB;AACA,eAAKwB,MAAL,GAAc,KAAKwF,SAAL,CAAeR,eAAf,GAAiCf,IAAjC,CACZ,2DAAI,UAACkB,MAAD,EAAY;AACd,gBAAIA,MAAM,CAACE,OAAP,CAAeI,MAAf,KAA0B,KAA9B,EAAqC;AACnC,qBAAO,IAAP;AACD,aAFD,MAEO;AACL,kBAAML,IAAI,GAAGD,MAAM,CAACE,OAAP,CAAeD,IAAf,EAAb;AACAA,kBAAI,CAAC5G,EAAL,GAAU2G,MAAM,CAACE,OAAP,CAAe7G,EAAzB;AACA,qBAAO4G,IAAP;AACD;AACF,WARD,CADY,CAAd;AAYA,iBAAO,KAAKpF,MAAZ;AACD;;;qCAEYA,M,EAAgB;AAC3B,eAAKwF,SAAL,GAAiB,KAAKb,GAAL,CAASW,GAAT,mBAAwBtF,MAAM,CAACxB,EAA/B,EAAjB;AACA,eAAKgH,SAAL,CAAeE,MAAf,CAAsB1F,MAAtB;AACD;;;qCAEYA,M,EAAgB;AAC3B,eAAKwF,SAAL,GAAiB,KAAKb,GAAL,CAASW,GAAT,mBAAwBtF,MAAM,CAACxB,EAA/B,EAAjB;AACA,eAAKgH,SAAL;AACD;;;;;;;uBAxDUd,a,EAAa,+H;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVD,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakB,e;AAOX,iCAAc;AAAA;;AANd,aAAAhC,QAAA,GAAqB;AACnBN,2BAAiB,EAAE,IADA;AAEnB/C,6BAAmB,EAAE,IAFF;AAGnBiC,8BAAoB,EAAE;AAHH,SAArB;;AAOE,YAAIqD,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,IAAxC,EAA8C;AAC5C,eAAKlC,QAAL,GAAgBmC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAhB;AACD;AACF;;;;sCAEU;AACT,iBAAO,KAAKlC,QAAZ;AACD;;;uCAEcA,Q,EAAoB;AACjCiC,sBAAY,CAACI,OAAb,CAAqB,UAArB,EAAiCF,IAAI,CAACG,SAAL,CAAetC,QAAf,CAAjC;AACD;;;;;;;uBAnBUgC,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVlB,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACP5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyB,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB3G,cAAQ,EAAE;AACR4G,cAAM,EAAE,yCADA;AAERC,kBAAU,EAAE,uCAFJ;AAGRC,mBAAW,EAAE,8CAHL;AAIRC,iBAAS,EAAE,uBAJH;AAKRC,qBAAa,EAAE,mCALP;AAMRC,yBAAiB,EAAE,cANX;AAORC,aAAK,EAAE,2CAPC;AAQRC,qBAAa,EAAE;AARP;AAFe,KAApB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAA7D,GAAG;AAAA,aAAI8D,OAAO,CAACC,KAAR,CAAc/D,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { RegisterGuard } from './guards/register.guard';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'register',\n    component: RegisterComponent,\n    canActivate: [RegisterGuard],\n  },\n  {\n    path: 'client/add',\n    component: AddClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/edit/:id',\n    component: EditClientComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'client/:id',\n    component: ClientDetailsComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'settings', component: SettingsComponent, canActivate: [AuthGuard] },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  providers: [AuthGuard, RegisterGuard],\n  imports: [RouterModule.forRoot(routes)],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'clientpanel';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\n\nimport { environment } from '../environments/environment';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ClientsComponent } from './components/clients/clients.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { EditClientComponent } from './components/edit-client/edit-client.component';\nimport { ClientDetailsComponent } from './components/client-details/client-details.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    ClientsComponent,\n    SidebarComponent,\n    AddClientComponent,\n    EditClientComponent,\n    ClientDetailsComponent,\n    LoginComponent,\n    RegisterComponent,\n    SettingsComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase, 'clientpanel'),\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { ClientService } from '../../services/client.service';\nimport { Router } from '@angular/router';\nimport { SettingsService } from '../../services/settings.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.css'],\n})\nexport class AddClientComponent implements OnInit {\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0,\n  };\n\n  disableBalanceOnAdd: boolean;\n  @ViewChild('clientForm') form: any;\n\n  constructor(\n    private flashMessage: FlashMessagesService,\n    private clientService: ClientService,\n    private router: Router,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.disableBalanceOnAdd = this.settingsService.getSettings().disableBalanceOnAdd;\n  }\n\n  onSubmit({ value, valid }: { value: Client; valid: boolean }) {\n    if (this.disableBalanceOnAdd) {\n      value.balance = 0;\n    }\n\n    if (!valid) {\n      // Show error\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      // Add new client\n      this.clientService.newClient(value);\n      // Show message\n      this.flashMessage.show('New client added', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      // Redirect to dash\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-66\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard</a\n    >\n  </div>\n  <div class=\"col-md-66\"></div>\n</div>\n<div class=\"card\">\n  <div class=\"card-header\">\n    Add Client\n  </div>\n  <div class=\"card-body\">\n    <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"firstName\"\n          #clientFirstName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientFirstName.errors && clientFirstName.touched\n          }\"\n          [(ngModel)]=\"client.firstName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          First name required\n        </div>\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"lastName\"\n          #clientLastName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientLastName.errors && clientLastName.touched\n          }\"\n          [(ngModel)]=\"client.lastName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientLastName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          Last name required\n        </div>\n\n        <div\n          [hidden]=\"!clientLastName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"email\"\n          #clientEmail=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientEmail.errors && clientEmail.touched\n          }\"\n          [(ngModel)]=\"client.email\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n          required\n        />\n\n        <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n          Email required\n        </div>\n\n        <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n          Email is not valid\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"phone\"\n          #clientPhone=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientPhone.errors && clientPhone.touched\n          }\"\n          [(ngModel)]=\"client.phone\"\n          minlength=\"10\"\n          required\n        />\n\n        <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n          Phone is required\n        </div>\n\n        <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n          Must be at least 10 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"balance\">Balance</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          [(ngModel)]=\"client.balance\"\n          name=\"balance\"\n          #clientBalance=\"ngModel\"\n          [disabled]=\"disableBalanceOnAdd\"\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-client-details',\n  templateUrl: './client-details.component.html',\n  styleUrls: ['./client-details.component.css'],\n})\nexport class ClientDetailsComponent implements OnInit {\n  id: string;\n  client: Client;\n  hasBalance: boolean = false;\n  showBalanceUpdateInput: boolean = false;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService.getClient(this.id).subscribe((client) => {\n      if (client != null) {\n        if (client.balance > 0) {\n          this.hasBalance = true;\n        }\n      }\n\n      this.client = client;\n    });\n  }\n\n  updateBalance() {\n    this.clientService.updateClient(this.client);\n    this.flashMessage.show('Balance updated', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n\n  onDeleteClick() {\n    if (confirm('Are you sure?')) {\n      this.clientService.deleteClient(this.client);\n      this.flashMessage.show('Client removed', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard\n    </a>\n  </div>\n  <div class=\"col-md-6\">\n    <div class=\"btn-group pull-right\">\n      <a routerLink=\"/client/edit/{{ id }}\" class=\"btn btn-dark\">\n        Edit\n      </a>\n      <button (click)=\"onDeleteClick()\" class=\"btn btn-danger\">Delete</button>\n    </div>\n  </div>\n</div>\n<hr />\n<div *ngIf=\"client\" class=\"card\">\n  <h3 class=\"card-header\">{{ client.firstName }} {{ client.lastName }}</h3>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"cold-md-8 col-sm-6\">\n        <h4>Client ID: {{ client.id }}</h4>\n      </div>\n      <div class=\"cold-md-8 col-sm-6\">\n        <h3 class=\"pull-right\">\n          Balance\n          <span\n            [class.text-danger]=\"hasBalance\"\n            [class.text-success]=\"!hasBalance\"\n          >\n            {{ client.balance | currency: \"USD\":\"symbol\" }}\n          </span>\n          <small>\n            <a (click)=\"showBalanceUpdateInput = !showBalanceUpdateInput\">\n              <i class=\"fa fa-pencil\"></i>\n            </a>\n          </small>\n        </h3>\n        <div class=\"clearfix\">\n          <form *ngIf=\"showBalanceUpdateInput\" (submit)=\"updateBalance()\">\n            <div class=\"input-group\">\n              <input\n                type=\"text\"\n                name=\"balance\"\n                class=\"form-control\"\n                [(ngModel)]=\"client.balance\"\n              />\n              <span class=\"input-group-btn\">\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n              </span>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n    <hr />\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Contact Email: {{ client.email }}</li>\n      <li class=\"list-group-item\">Contact Email: {{ client.phone }}</li>\n    </ul>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\n\nimport { Client } from '../../models/Client';\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.css'],\n})\nexport class ClientsComponent implements OnInit {\n  clients: Client[];\n  totalOwed: number;\n\n  constructor(private clientService: ClientService) {}\n\n  ngOnInit() {\n    this.clientService.getClients().subscribe((clients) => {\n      this.clients = clients;\n      this.getTotalOwed();\n    });\n  }\n\n  getTotalOwed() {\n    this.totalOwed = this.clients.reduce((total, client) => {\n      return total + parseFloat(client.balance.toString());\n    }, 0);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <h2><i class=\"fa fa-users\"></i> Clients</h2>\n  </div>\n  <div class=\"col-md-6\">\n    <h5 class=\"text-right text-secondary\">\n      Total Owed: {{ totalOwed | currency: \"USD\":\"symbol\" }}\n    </h5>\n  </div>\n</div>\n<table *ngIf=\"clients?.length > 0; else noClients\" class=\"table table-striped\">\n  <thead class=\"thead-inverse\">\n    <tr>\n      <th>Name</th>\n      <th>Email</th>\n      <th>Balance</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let client of clients\">\n      <td>{{ client.firstName }} {{ client.lastName }}</td>\n      <td>{{ client.email }}</td>\n      <td>{{ client.balance | currency: \"USD\":\"symbol\" }}</td>\n      <td>\n        <a routerLink=\"client/{{ client.id }}\" class=\"btn btn-secondary btn-sm\">\n          <i class=\"fa fa-arrow-circle-o-right\"></i> Details\n        </a>\n      </td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-template #noClients>\n  <hr />\n  <h5>There are no clients in the system</h5>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-md-10\">\n    <app-clients></app-clients>\n  </div>\n  <div class=\"col-md-2\">\n    <app-sidebar></app-sidebar>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-edit-client',\n  templateUrl: './edit-client.component.html',\n  styleUrls: ['./edit-client.component.css'],\n})\nexport class EditClientComponent implements OnInit {\n  id: string;\n  client: Client = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    balance: 0,\n  };\n  disableBalanceOnEdit: boolean;\n\n  constructor(\n    private clientService: ClientService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.disableBalanceOnEdit = this.settingsService.getSettings().disableBalanceOnEdit;\n    // Get id from url\n    this.id = this.route.snapshot.params['id'];\n    // Get client\n    this.clientService\n      .getClient(this.id)\n      .subscribe((client) => (this.client = client));\n  }\n\n  onSubmit({ value, valid }: { value: Client; valid: boolean }) {\n    if (!valid) {\n      this.flashMessage.show('Please fill out the form correctly', {\n        cssClass: 'alert-danger',\n        timeout: 4000,\n      });\n    } else {\n      // Add id to client\n      value.id = this.id;\n      // Update client\n      this.clientService.updateClient(value);\n      this.flashMessage.show('Client updated', {\n        cssClass: 'alert-success',\n        timeout: 4000,\n      });\n      this.router.navigate(['/client/' + this.id]);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-66\">\n    <a routerLink=\"/client/{{ id }}\" class=\"btn btn-link\">\n      <i class=\"fa fa-arrow-circle-o-left\"></i> Back to Client</a\n    >\n  </div>\n  <div class=\"col-md-66\"></div>\n</div>\n<div class=\"card\">\n  <div class=\"card-header\">\n    Edit Client\n  </div>\n  <div class=\"card-body\">\n    <form #clientForm=\"ngForm\" (ngSubmit)=\"onSubmit(clientForm)\">\n      <div class=\"form-group\">\n        <label for=\"firstName\">First Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"firstName\"\n          #clientFirstName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientFirstName.errors && clientFirstName.touched\n          }\"\n          [(ngModel)]=\"client.firstName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          First name required\n        </div>\n\n        <div\n          [hidden]=\"!clientFirstName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last Name</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"lastName\"\n          #clientLastName=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientLastName.errors && clientLastName.touched\n          }\"\n          [(ngModel)]=\"client.lastName\"\n          minlength=\"2\"\n          required\n        />\n\n        <div\n          [hidden]=\"!clientLastName.errors?.required\"\n          class=\"invalid-feedback\"\n        >\n          Last name required\n        </div>\n\n        <div\n          [hidden]=\"!clientLastName.errors?.minlength\"\n          class=\"invalid-feedback\"\n        >\n          Must be at least 2 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"email\"\n          #clientEmail=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientEmail.errors && clientEmail.touched\n          }\"\n          [(ngModel)]=\"client.email\"\n          pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n          required\n        />\n\n        <div [hidden]=\"!clientEmail.errors?.required\" class=\"invalid-feedback\">\n          Email required\n        </div>\n\n        <div [hidden]=\"!clientEmail.errors?.pattern\" class=\"invalid-feedback\">\n          Email is not valid\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          name=\"phone\"\n          #clientPhone=\"ngModel\"\n          [ngClass]=\"{\n            'is-invalid': clientPhone.errors && clientPhone.touched\n          }\"\n          [(ngModel)]=\"client.phone\"\n          minlength=\"10\"\n          required\n        />\n\n        <div [hidden]=\"!clientPhone.errors?.required\" class=\"invalid-feedback\">\n          Phone is required\n        </div>\n\n        <div [hidden]=\"!clientPhone.errors?.minlength\" class=\"invalid-feedback\">\n          Must be at least 10 characters\n        </div>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"balance\">Balance</label>\n        <input\n          type=\"number\"\n          class=\"form-control\"\n          [(ngModel)]=\"client.balance\"\n          name=\"balance\"\n          #clientBalance=\"ngModel\"\n          [disabled]=\"disableBalanceOnEdit\"\n        />\n      </div>\n\n      <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe((auth) => {\n      if (auth) {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n\n  onSubmit() {\n    this.authService\n      .login(this.email, this.password)\n      .then((res) => {\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        this.router.navigate(['/']);\n      })\n      .catch((err) => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"\n            ><i class=\"fa fa-lock\"></i> Client Panel</span\n          >\n          Login\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            class=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Client } from '../../models/Client';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn: boolean;\n  loggedInUser: string;\n  showRegister: boolean;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.authService.getAuth().subscribe((auth) => {\n      if (auth) {\n        this.isLoggedIn = true;\n        this.loggedInUser = auth.email;\n      } else {\n        this.isLoggedIn = false;\n      }\n    });\n    this.showRegister = this.settingsService.getSettings().allowRegistration;\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show('You are now logged out', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n    this.router.navigate(['/login']);\n  }\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\n  <div class=\"container\">\n    <a routerLink=\"/\" class=\"navbar-brand\"\n      ><span class=\"client-panel\">ClientPanel</span></a\n    >\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarMain\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarMain\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/\" class=\"nav-link\">Dashboard</a>\n        </li>\n      </ul>\n\n      <ul class=\"navbar-nav ml-auto\">\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/register\" class=\"nav-link\">Register</a>\n        </li>\n        <li *ngIf=\"!isLoggedIn && showRegister\" class=\"nav-item\">\n          <a routerLink=\"/login\" class=\"nav-link\">Login</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" class=\"nav-link\">{{ loggedInUser }}</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a routerLink=\"/settings\" class=\"nav-link\">Settings</a>\n        </li>\n        <li *ngIf=\"isLoggedIn\" class=\"nav-item\">\n          <a href=\"#\" (click)=\"onLogoutClick()\" class=\"nav-link\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private flashMessage: FlashMessagesService\n  ) {}\n\n  ngOnInit() {}\n\n  onSubmit() {\n    this.authService\n      .register(this.email, this.password)\n      .then((res) => {\n        this.flashMessage.show('You are now registered and logged in', {\n          cssClass: 'alert-success',\n          timeout: 4000,\n        });\n        this.router.navigate(['/']);\n      })\n      .catch((err) => {\n        this.flashMessage.show(err.message, {\n          cssClass: 'alert-danger',\n          timeout: 4000,\n        });\n      });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6 mx-auto\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h1 class=\"text-center pb-4 pt-3\">\n          <span class=\"text-primary\"\n            ><i class=\"fa fa-lock\"></i> Client Panel</span\n          >\n          Register\n        </h1>\n        <form (submit)=\"onSubmit()\">\n          <div class=\"form-group\">\n            <label for=\"email\">Email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n            />\n          </div>\n          <input\n            type=\"submit\"\n            value=\"Register\"\n            class=\"btn btn-primary btn-block\"\n          />\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { SettingsService } from '../../services/settings.service';\nimport { Settings } from '../../models/Settings';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n})\nexport class SettingsComponent implements OnInit {\n  settings: Settings;\n\n  constructor(\n    private router: Router,\n    private flashMessage: FlashMessagesService,\n    private settingsService: SettingsService\n  ) {}\n\n  ngOnInit() {\n    this.settings = this.settingsService.getSettings();\n  }\n\n  onSubmit() {\n    this.settingsService.changeSettings(this.settings);\n    this.flashMessage.show('Settings saved', {\n      cssClass: 'alert-success',\n      timeout: 4000,\n    });\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-6\">\n    <a routerLink=\"/\" class=\"btn btn-link\"\n      ><i class=\"fa fa-arrow-circle-o-left\"></i> Back to Dashboard</a\n    >\n  </div>\n  <div class=\"col-md-6\"></div>\n  <div class=\"card\">\n    <div class=\"card-header\">\n      Edit Settings\n    </div>\n    <div class=\"card-body\">\n      <form (submit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <label>Allow Registration</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"allowRegistration\"\n            [checked]=\"settings.allowRegistration\"\n            (change)=\"settings.allowRegistration = !settings.allowRegistration\"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label>Disable Balance On Add</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"disableBalanceOnAdd\"\n            [checked]=\"settings.disableBalanceOnAdd\"\n            (change)=\"\n              settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\n            \"\n          />\n        </div>\n\n        <div class=\"form-group\">\n          <label>Disable Balance On Edit</label><span>{{ \" \" }}</span>\n          <input\n            type=\"checkbox\"\n            name=\"disableBalanceOnEdit\"\n            [checked]=\"settings.disableBalanceOnEdit\"\n            (change)=\"\n              settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\n            \"\n          />\n        </div>\n\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary btn-block\" />\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a routerLink=\"/client/add\" class=\"btn btn-success btn-block\">\n  <i class=\"fa fa-plus\"></i>New\n</a>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private afAuth: AngularFireAuth) {}\n\n  canActivate(): Observable<boolean> {\n    return this.afAuth.authState.pipe(\n      map((auth) => {\n        if (!auth) {\n          this.router.navigate(['/login']);\n          return false;\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { SettingsService } from '../services/settings.service';\n\n@Injectable()\nexport class RegisterGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private settingsService: SettingsService\n  ) {}\n\n  canActivate(): boolean {\n    if (this.settingsService.getSettings().allowRegistration) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private afAuth: AngularFireAuth) {}\n\n  login(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.signInWithEmailAndPassword(email, password).then(\n        (userData) => resolve(userData),\n        (err) => reject(err)\n      );\n    });\n  }\n\n  register(email: string, password: string) {\n    return new Promise((resolve, reject) => {\n      this.afAuth.auth.createUserWithEmailAndPassword(email, password).then(\n        (userData) => resolve(userData),\n        (err) => reject(err)\n      );\n    });\n  }\n\n  getAuth() {\n    return this.afAuth.authState.pipe(map((auth) => auth));\n  }\n\n  logout() {\n    this.afAuth.auth.signOut();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  AngularFirestore,\n  AngularFirestoreCollection,\n  AngularFirestoreDocument,\n} from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { Client } from '../models/Client';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientService {\n  clientsCollection: AngularFirestoreCollection<Client>;\n  clientDoc: AngularFirestoreDocument<Client>;\n  clients: Observable<Client[]>;\n  client: Observable<Client>;\n\n  constructor(private afs: AngularFirestore) {\n    this.clientsCollection = this.afs.collection('clients', (ref) =>\n      ref.orderBy('lastName', 'asc')\n    );\n  }\n\n  getClients(): Observable<Client[]> {\n    // Get clients with id\n    this.clients = this.clientsCollection.snapshotChanges().pipe(\n      map((changes) => {\n        return changes.map((action) => {\n          const data = action.payload.doc.data() as Client;\n          data.id = action.payload.doc.id;\n          return data;\n        });\n      })\n    );\n\n    return this.clients;\n  }\n\n  newClient(client: Client) {\n    this.clientsCollection.add(client);\n  }\n\n  getClient(id: string): Observable<Client> {\n    this.clientDoc = this.afs.doc<Client>(`clients/${id}`);\n    this.client = this.clientDoc.snapshotChanges().pipe(\n      map((action) => {\n        if (action.payload.exists === false) {\n          return null;\n        } else {\n          const data = action.payload.data() as Client;\n          data.id = action.payload.id;\n          return data;\n        }\n      })\n    );\n\n    return this.client;\n  }\n\n  updateClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.update(client);\n  }\n\n  deleteClient(client: Client) {\n    this.clientDoc = this.afs.doc(`clients/${client.id}`);\n    this.clientDoc.delete();\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Settings } from '../models/Settings';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  settings: Settings = {\n    allowRegistration: true,\n    disableBalanceOnAdd: true,\n    disableBalanceOnEdit: true,\n  };\n\n  constructor() {\n    if (localStorage.getItem('settings') != null) {\n      this.settings = JSON.parse(localStorage.getItem('settings'));\n    }\n  }\n\n  getSettings(): Settings {\n    return this.settings;\n  }\n\n  changeSettings(settings: Settings) {\n    localStorage.setItem('settings', JSON.stringify(settings));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBbpFwkJChGyMcwGwQPjpa4ZPBicLUn9RE',\n    authDomain: 'clientpanelprod-cd2b0.firebaseapp.com',\n    databaseURL: 'https://clientpanelprod-cd2b0.firebaseio.com',\n    projectId: 'clientpanelprod-cd2b0',\n    storageBucket: 'clientpanelprod-cd2b0.appspot.com',\n    messagingSenderId: '566913337533',\n    appId: '1:566913337533:web:3cbf52d1e6fdb61dcc8fd4',\n    measurementId: 'G-1YKWQFDFZ3',\n  },\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}